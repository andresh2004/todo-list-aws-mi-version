pipeline {
    agent none  // Usamos "none" para no asignar un agente por defecto

    stages {
        stage('Pruebas Est치ticas') {
            agent { label 'agente-estatico' }  // Agente para an치lisis est치tico
            steps {
                script {
                    // Ejecutar Flake8 y Bandit
                    echo "Ejecutando pruebas est치ticas..."
                    sh 'flake8 .'
                    sh 'bandit -r .'
                    
                    // Guardamos la URL o archivos necesarios para el siguiente agente
                    stash includes: 'url.txt', name: 'url_file'  // Guardamos la URL en un archivo
                }
            }
        }

        stage('Pruebas API') {
            agent { label 'agente-api' }  // Agente para pruebas de API
            steps {
                script {
                    // Recuperamos la URL del primer agente
                    unstash 'url_file'  // Traemos el archivo con la URL
                    def url = readFile('url.txt')  // Leemos la URL guardada
                    echo "La URL del entorno es: ${url}"
                    
                    // Ejecutar pruebas de API
                    echo "Ejecutando pruebas de API..."
                    sh "pytest --url=${url}"
                }
            }
        }
    }
}

